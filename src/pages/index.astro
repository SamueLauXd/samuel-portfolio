---
import Layout from "../layouts/Layout.astro";
import { BrandLinks } from "../components/Header";
import { ChevronDown } from "../components/Header";
---

<Layout title="Hi, i'm Samuel">
	<!-- <h1 class="font-bold text-[280px] text-blue/10 absolute top-0 left-0 -z-10">FRONTEND</h1>
	<h1 class="font-bold text-[280px] text-blue/10 absolute top-80 left-0 -z-10">UI DESIGN</h1> -->

	<div>
		<section
			class="flex flex-col-reverse md:flex-row md:items-center justify-between"
		>
			<article class="flex flex-col gap-1 md:gap-2 md:pb-6">
				<p class="font-medium text-xl md:text-4xl">Hi, my name is</p>

				<h1
					class="font-bold text-5xl text-transparent md:text-9xl bg-gradient-to-r from-blue to-orange bg-clip-text"
				>
					Samuel Ortiz
				</h1>

				<p
					class="text-md md:text-2xl w-fit px-2 py-1 rounded-md bg-purple/30"
				>
					I'm a<span
						class="typewrite text-orange ml-2"
						data-period="2000"
						data-type='["Frontend Developer", "UI Designer"]'>
						<span class="wrap"></span>
					</span>
				</p>
				<div
					class="flex flex-col md:flex-row gap-2 md:gap-6 md:items-center mt-4 md:mt-9"
				>
					<h3 class="font-medium text-lg md:text-2xl">
						Check Out My
					</h3>
					<span class="flex gap-2">
						<BrandLinks />
					</span>
				</div>
			</article>
			<picture id="hero-image" class="md:max-w-4xl">
				<img src="/heroImage.webp" alt="" />
			</picture>
		</section>
		<section class="flex items-center py-14 md:py-0 justify-center">
			<button
				class="rounded-full bg-orange/30 animate-bounce p-2 transition-all ease-in-out duration-200 hover:bg-orange/80"
			>
				<ChevronDown />
			</button>
		</section>
	</div>
</Layout>

<style>
	#hero-image {
		animation: levitate 6s ease-in-out infinite;
	}

	@keyframes levitate {
		0% {
			transform: translateY(0px);
		}
		50% {
			transform: translateY(-10px);
		}
		100% {
			transform: translateY(0px);
		}
	}
</style>

<script>
	let TxtType = function (el, toRotate, period) {
		this.toRotate = toRotate;
		this.el = el;
		this.loopNum = 0;
		this.period = parseInt(period, 10) || 2000;
		this.txt = "";
		this.tick();
		this.isDeleting = false;
	};

	TxtType.prototype.tick = function () {
		let i = this.loopNum % this.toRotate.length;
		let fullTxt = this.toRotate[i];

		if (this.isDeleting) {
			this.txt = fullTxt.substring(0, this.txt.length - 1);
		} else {
			this.txt = fullTxt.substring(0, this.txt.length + 1);
		}

		this.el.innerHTML = '<span class="wrap">' + this.txt + "</span>";

		let that = this;
		let delta = 200 - Math.random() * 100;

		if (this.isDeleting) {
			delta /= 2;
		}

		if (!this.isDeleting && this.txt === fullTxt) {
			delta = this.period;
			this.isDeleting = true;
		} else if (this.isDeleting && this.txt === "") {
			this.isDeleting = false;
			this.loopNum++;
			delta = 500;
		}

		setTimeout(function () {
			that.tick();
		}, delta);
	};

	window.onload = function () {
		let elements = document.getElementsByClassName("typewrite");
		for (let i = 0; i < elements.length; i++) {
			let toRotate = elements[i].getAttribute("data-type");
			let period = elements[i].getAttribute("data-period");
			if (toRotate) {
				new TxtType(elements[i], JSON.parse(toRotate), period);
			}
		}
		// INJECT CSS
		let css = document.createElement("style");
		css.type = "text/css";
		css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
		document.body.appendChild(css);
	};
</script>
